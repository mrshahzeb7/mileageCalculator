// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TimeLineList  TimeLineList renders correctly 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    style={
      {
        "backgroundColor": "#93b2fd",
        "height": 1334,
        "left": 52.50000000000001,
        "position": "absolute",
        "width": 7.5,
      }
    }
  />
  <View
    style={
      {
        "flex": 1,
        "overflow": "hidden",
      }
    }
  >
    <RCTScrollView
      ListHeaderComponent={
        <Dot
          style={
            {
              "marginBottom": 26.68,
            }
          }
        />
      }
      applyWindowCorrection={[Function]}
      canChangeSize={true}
      contentContainerStyle={
        {
          "backgroundColor": undefined,
          "minHeight": 1,
          "minWidth": 1,
          "paddingLeft": 0,
          "paddingRight": 0,
        }
      }
      contentHeight={0}
      contentWidth={0}
      data={[]}
      dataProvider={
        DataProvider {
          "_data": [],
          "_firstIndexToProcess": 0,
          "_hasStableIds": true,
          "_requiresDataChangeHandling": false,
          "_size": 0,
          "getStableId": [Function],
          "rowHasChanged": [Function],
        }
      }
      disableRecycling={false}
      estimatedItemSize={173.42000000000002}
      extendedState={{}}
      externalScrollView={[Function]}
      finalRenderAheadOffset={250}
      forceNonDeterministicRendering={true}
      horizontal={false}
      initialOffset={0}
      initialRenderIndex={0}
      isHorizontal={false}
      keyExtractor={[Function]}
      layoutProvider={
        GridLayoutProviderWithProps {
          "_acceptableRelayoutDelta": 1,
          "_getHeightOrWidth": [Function],
          "_getLayoutTypeForIndex": [Function],
          "_getSpan": [Function],
          "_hasExpired": false,
          "_maxSpan": 1,
          "_setLayoutForType": [Function],
          "_tempDim": {
            "height": 0,
            "width": 0,
          },
          "averageWindow": AverageWindow {
            "currentAverage": 173.42000000000002,
            "currentCount": 1,
            "inputValues": [
              173.42000000000002,
            ],
            "nextIndex": 1,
          },
          "defaultEstimatedItemSize": 100,
          "layoutObject": {
            "size": undefined,
            "span": undefined,
          },
          "props": {
            "ListHeaderComponent": <Dot
              style={
                {
                  "marginBottom": 26.68,
                }
              }
            />,
            "contentContainerStyle": {
              "paddingBottom": 200.1,
            },
            "data": [],
            "estimatedItemSize": 173.42000000000002,
            "keyExtractor": [Function],
            "numColumns": 1,
            "onEndReachedThreshold": 0.2,
            "refreshControl": <RefreshControlMock
              onRefresh={[Function]}
              refreshing={false}
              tintColor="#ffffff"
            />,
            "renderItem": [Function],
            "showsVerticalScrollIndicator": false,
          },
          "renderWindowInsets": {
            "height": 0,
            "width": 0,
          },
          "shouldRefreshWithAnchoring": true,
        }
      }
      maxRenderAhead={750}
      numColumns={1}
      onEndReached={[Function]}
      onEndReachedThreshold={0}
      onEndReachedThresholdRelative={0.2}
      onItemLayout={[Function]}
      onLayout={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onSizeChanged={[Function]}
      onVisibleIndicesChanged={[Function]}
      refreshControl={
        <RefreshControlMock
          onRefresh={[Function]}
          refreshing={false}
          tintColor="#ffffff"
        />
      }
      removeClippedSubviews={false}
      renderAheadOffset={0}
      renderAheadStep={250}
      renderContentContainer={[Function]}
      renderItem={[Function]}
      renderItemContainer={[Function]}
      rowRenderer={[Function]}
      scrollEventThrottle={16}
      scrollThrottle={16}
      scrollViewProps={
        {
          "contentContainerStyle": {
            "backgroundColor": undefined,
            "minHeight": 1,
            "minWidth": 1,
            "paddingLeft": 0,
            "paddingRight": 0,
          },
          "onLayout": [Function],
          "onScrollBeginDrag": [Function],
          "refreshControl": <RefreshControlMock
            onRefresh={[Function]}
            refreshing={false}
            tintColor="#ffffff"
          />,
          "style": {
            "minHeight": 1,
            "minWidth": 1,
          },
        }
      }
      showsVerticalScrollIndicator={false}
      style={
        {
          "minHeight": 1,
          "minWidth": 1,
        }
      }
      suppressBoundedSizeException={true}
      windowCorrectionConfig={
        {
          "applyToInitialOffset": true,
          "applyToItemScroll": true,
          "value": {
            "endCorrection": 0,
            "startCorrection": 0,
            "windowShift": -1,
          },
        }
      }
    >
      <RCTRefreshControl />
      <View>
        <View
          style={
            {
              "flexDirection": "column",
            }
          }
        >
          <View
            style={
              {
                "paddingLeft": 0,
                "paddingTop": 0,
              }
            }
          />
          <View
            style={
              [
                undefined,
                undefined,
              ]
            }
          >
            <View
              style={
                [
                  {
                    "backgroundColor": "#93b2fd",
                    "borderRadius": 15.297966458904849,
                    "height": 30.595932917809698,
                    "marginLeft": 41.25,
                    "width": 30.595932917809698,
                  },
                  {
                    "marginBottom": 26.68,
                  },
                ]
              }
            />
          </View>
          <AutoLayoutView
            enableInstrumentation={false}
            horizontal={false}
            onBlankAreaEvent={[Function]}
            onLayout={[Function]}
            renderAheadOffset={0}
            scrollOffset={0}
            style={
              {
                "height": 0,
                "width": 0,
              }
            }
            windowSize={0}
          />
          <CellContainer
            index={-1}
            style={
              [
                undefined,
                undefined,
              ]
            }
          />
          <View
            style={
              {
                "paddingBottom": 200.1,
                "paddingRight": 0,
              }
            }
          />
        </View>
      </View>
    </RCTScrollView>
  </View>
</View>
`;
